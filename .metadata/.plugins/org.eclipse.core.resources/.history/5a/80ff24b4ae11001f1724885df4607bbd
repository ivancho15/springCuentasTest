package com.bolsadeideas.springboot.app.controllers;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bolsadeideas.springboot.app.models.reports.ReporteEstadoDeCuenta;
import com.bolsadeideas.springboot.app.models.services.IReporteServices;

@CrossOrigin(origins = { "http://localhost:4200" })
@RestController
@RequestMapping("/api")
public class ReporteRestController {
	
	@Autowired
	private IReporteServices reporteService;
	
	@GetMapping("/reporte/estadoDeCuentaFechaCliente/{desde}/{hasta}")
	public ResponseEntity<?> reporteFechaCliente(@PathVariable String fechadesde, @PathVariable String fechahasta, @PathVariable Long idCliente) throws ParseException{
		SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy");
		Date desde = formatter.parse(fechadesde);
		Date hasta = formatter.parse(fechahasta);
		
		List <ReporteEstadoDeCuenta> reporte = new ArrayList<ReporteEstadoDeCuenta>();
		
		Map<String, Object> response = new HashMap<>();
		
		
		
		try {
		
			reporte = reporteService.findMovimientosByDateBetweenAndClienteId(desde, hasta);
		}catch(DataAccessException e){
			response.put("mensaje", "Error al realizar la consulta en la base de datos");
			response.put("error", e.getMessage().concat(": ").concat(e.getMostSpecificCause().getMessage()));
			return new ResponseEntity<Map<String, Object>>(response, HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		if(reporte==null) {
			response.put("mensaje", "No se encontraro resultados para la consulta");
			return new ResponseEntity<Map<String, Object>>(response, HttpStatus.NOT_FOUND);
		}
		response.put("movimientos", reporte);
		return new ResponseEntity<Map<String, Object>>(response, HttpStatus.OK);
	
		
	}
	
	

}
